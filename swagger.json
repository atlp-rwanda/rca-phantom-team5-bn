{
  "swagger": "2.0",
  "info": {
    "description": "Elevate the public transport experience",
    "version": "1.0.0",
    "title": "PHANTOM ASSIGNMENT",
    "termsOfService": "https://github.com/atlp-rwanda/rca-phantom-team5-bn#readme",
    "contact": {
      "email": ""
    }
  },
  "host": "localhost:3003",
  "basePath": "/api",
  "tags": [
    {
      "name": "Initial Route",
      "description": "Initial/Fake Endpoint | GET Route"
    },
    {
      "name": "Auth Routes",
      "description": "Authentication endpoints | POST Route"
    },
    {
      "name": "User Routes",
      "description": "User endpoints | Put Route"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "none"
  ],
  "produces": [
    "application/json",
    "none"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Initial Route"
        ],
        "summary": "Handle Intial / Wrong GET Route)",
        "description": "By the use of initial/wrong GET endpoint, you will be able to see welcome message (Welcome To Phantom Server)",
        "responses": {
          "200": {
            "description": "Success. (Welcome To Phantom Server)"
          }
        }
      }
    },

    "/auth/signin": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "summary": " (Signin User With POST Route)",
        "description": "By the use of this POST endpoint, you will be able to signin a user account",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Signin" }
          }
        ]
      }
    },

    "/auth/register-user": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "summary": " (Register User With POST Route)",
        "description": "By the use of this POST endpoint, you will be able to register a user account",
        "responses": {
          "201": {
            "description": "CREATED."
          },
          "400": {
            "description": "BAD_REQUEST."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Users" }
          }
        ]
      }
    },
    "/users/update-profile/{id}": {
      "put": {
        "tags": [
          "User Routes"
        ],
        "summary": " (Update User With PUT Route)",
        "description": "By the use of this PUT endpoint, you will be able to update a user account",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "user Id"
          },{
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/UpdateProfile" }
          }
        ]
      }
    },

    "/buses": {
      "get": {
        "tags": [
          "Bus Routes"
        ],
        "summary": "Get all cars",
        "description": "Returns a list of all buses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of buses to return",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of buses to skip before starting to return buses",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of buses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bus"
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/cars": {
      "post": {
        "tags": [
          "Bus Routes"
        ],
        "summary": "Create a new car",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/Car"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Honda Civic",
                "available_sits": 4,
                "model": "Sedan",
                "plate_number": "AB-1234",
                "createdAt": "2022-04-01T10:00:00Z",
                "updatedAt": "2022-04-01T10:00:00Z",
                "agencyId": 1
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": "400",
                "message": "Invalid request body"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": "500",
                "message": "Internal server error"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "car",
            "description": "The car object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarInput"
            }
          }
        ]
      }
    }
  },

  
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "[operator, driver]"
        },
        "fname": {
          "type": "string",
          "example": "John"
        },
        "lname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "your-email@gmail.com"
        },
        "driver_licence": {
          "type": "string",
          "required": true,
          "example": "[A,B,C,D,E,F]"
        },
        "nid": {
          "type": "string",
          "required": true,
          "example": "1920786767665547"
        }
      }
    },
    "Signin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "required": true,
          "example": "your-email@gmail.com"
        },
        "password": {
          "type": "string",
          "required": true,
          "example": "Test@123"
        },
        "device_id": {
          "type": "string",
          "required": true,
          "example": "SMG-1234"
        }
      }
    },
    "UpdateProfile": {
      "type": "object",
      "properties": {
        "fname": {
          "type": "string",
          "example": "John"
        },
        "lname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "your-email@gmail.com"
        },
        "password": {
          "type": "string",
          "required": true,
          "example": "23442*(&^i"
        }
      }
    },
    "Bus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example":12
        },
        "name": {
          "type": "string",
          "example":"Bus 230"
        },
        "available_sits": {
          "type": "string",
          "example":30
        },
        "model": {
          "type": "string",
          "example":"Toyota"
        },
        "plate_number": {
          "type": "string",
          "example":"RAC@#$D"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example":"10-10-2022"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example":"10-10-2022"

        },
        "agencyId": {
          "type": "integer",
          "format": "int64",
          "example":2

        }
      }
    }
  }

   }
