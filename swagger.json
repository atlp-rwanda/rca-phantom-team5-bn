{
  "swagger": "2.0",
  "info": {
    "description": "Elevate the public transport experience",
    "version": "1.0.0",
    "title": "PHANTOM ASSIGNMENT",
    "termsOfService": "https://github.com/atlp-rwanda/rca-phantom-team5-bn#readme",
    "contact": {
      "email": ""
    }
  },
  "host": "localhost:3003",
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT authentication using the Bearer scheme. Enter the JWT token in the format 'Bearer {token}'."
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "Initial Route",
      "description": "Initial/Fake Endpoint | GET Route"
    },
    {
      "name": "Auth Routes",
      "description": "Authentication endpoints | POST Route"
    },
    {
      "name": "User Routes",
      "description": "User endpoints | Put Route"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "none"
  ],
  "produces": [
    "application/json",
    "none"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Initial Route"
        ],
        "summary": "Handle Intial / Wrong GET Route)",
        "description": "By the use of initial/wrong GET endpoint, you will be able to see welcome message (Welcome To Phantom Server)",
        "responses": {
          "200": {
            "description": "Success. (Welcome To Phantom Server)"
          }
        }
      }
    },

    "/auth/signin": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "summary": " (Signin User With POST Route)",
        "description": "By the use of this POST endpoint, you will be able to signin a user account",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Signin" }
          }
        ]
      }
    },

    "/auth/register-user": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "summary": " (Register User With POST Route)",
        "description": "By the use of this POST endpoint, you will be able to register a user account",
        "responses": {
          "201": {
            "description": "CREATED."
          },
          "400": {
            "description": "BAD_REQUEST."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Users" }
          }
        ]
      }
    },

    "/users/update-profile/{id}": {
      "put": {
        "tags": [
          "User Routes"
        ],
        "summary": " (Update User With PUT Route)",
        "description": "By the use of this PUT endpoint, you will be able to update a user account",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "user Id"
          },
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/UpdateProfile" }
          }
        ]
      }
    },




    "/buses/create": {
      "post": {
        "tags": [
          "Bus Routes"
        ],
        "summary": "(Create a new bus with POST route}",
        "description": "By the use of this POST endpoint, you will be able to a new bus",
        "responses": {
          "201": {
            "description": "CREATED."
          },
          "400": {
            "description": "BAD_REQUEST."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Buses" }
          }
        ]
      }
    },

    "/buses/update/{id}": {
      "put": {
        "tags": [
          "Bus Routes"
        ],
        "summary": " (Update Bus With PUT Route)",
        "description": "By the use of this PUT endpoint, you will be able to update a bus",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id"
          },{
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Buses" }
          }
        ]
      }
    },


    "/buses/delete/{id}": {
      "delete": {
        "tags": [
          "Bus Routes"
        ],
        "summary": " (Delete Bus With DELETE Route)",
        "description": "By the use of this DELETE endpoint, you will be able to delete a bus",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id",
            "schema": { "$ref": "#/definitions/Buses" }
          }
        ]
      }
    },

    "/buses/bus/{id}": {
      "get": {
        "tags": [
          "Bus Routes"
        ],
        "summary": " (Get Bus With GET Route)",
        "description": "By the use of this GET endpoint, you will be able to get a bus",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id",
            "schema": { "$ref": "#/definitions/Buses" }
          }
        ]
      }
    },
    "/buses/buses": {
      "get": {
        "tags": [
          "Bus Routes"
        ],
        "summary": " (Get all buses With GET Route)",
        "description": "By the use of this GET endpoint, you will be able to get all buses",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
       "schema": { "$ref": "#/definitions/Buses" }
      }
    },



    "/agencies/create": {
      "post": {
        "tags": [
          "Agency Routes"
        ],
        "summary": "(Create a new agency with POST route}",
        "description": "By the use of this POST endpoint, you will be able to a new agency",
        "responses": {
          "201": {
            "description": "CREATED."
          },
          "400": {
            "description": "BAD_REQUEST."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Agencies" }
          }
        ]
      }
    },

    "/agencies/update/{id}": {
      "put": {
        "tags": [
          "Agency Routes"
        ],
        "summary": " (Update agency With PUT Route)",
        "description": "By the use of this PUT endpoint, you will be able to update an agency",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id"
          },{
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/Agencies" }
          }
        ]
      }
    },


    "/agencies/delete/{id}": {
      "delete": {
        "tags": [
          "Agency Routes"
        ],
        "summary": " (Delete agency With DELETE Route)",
        "description": "By the use of this DELETE endpoint, you will be able to delete an agency",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id",
            "schema": { "$ref": "#/definitions/Agencies" }
          }
        ]
      }
    },

    "/agencies/agency/{id}": {
      "get": {
        "tags": [
          "Agency Routes"
        ],
        "summary": " (Get agency With GET Route)",
        "description": "By the use of this GET endpoint, you will be able to get an agency",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Bus Id",
            "schema": { "$ref": "#/definitions/Agencies" }
          }
        ]
      }
    },
    "/agencies": {
      "get": {
        "tags": [
          "Agency Routes"
        ],
        "summary": " (Get all agencies With GET Route)",
        "description": "By the use of this GET endpoint, you will be able to get all agencies",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
       "schema": { "$ref": "#/definitions/Agencies" }
      }
    },
    "/users/update-profile/{id}": {
      "put": {
        "tags": [
          "User Routes"
        ],
        "summary": " (Update User With PUT Route)",
        "description": "By the use of this PUT endpoint, you will be able to update a user account",
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "BAD_REQUEST."
          },
          "401": {
            "description": "UNAUTHORIZED."
          },
          "404": {
            "description": "NOT_FOUND."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "user Id"
          },{
            "in": "body",
            "name": "body",
            "type": "object",
            "required": true,
            "description": "Body Request",
            "schema": { "$ref": "#/definitions/UpdateProfile" }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ]
      }
    }









  },



  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "[operator, driver]"
        },
        "fname": {
          "type": "string",
          "example": "John"
        },
        "lname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "your-email@gmail.com"
        },
        "driver_licence": {
          "type": "string",
          "required": true,
          "example": "[A,B,C,D,E,F]"
        },
        "nid": {
          "type": "string",
          "required": true,
          "example": "1920786767665547"
        }
      }
    },
    "Signin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "required": true,
          "example": "your-email@gmail.com"
        },
        "password": {
          "type": "string",
          "required": true,
          "example": "Test@123"
        },
        "device_id": {
          "type": "string",
          "required": true,
          "example": "SMG-1234"
        }
      }
    },
    "UpdateProfile": {
      "type": "object",
      "properties": {
        "fname": {
          "type": "string",
          "example": "John"
        },
        "lname": {
          "type": "string",
          "example": "Doe"
        },
        "nid": {
          "type": "string",
          "required": true,
          "example": "1920786767665547"
        }
      }
    }



  }

   }
